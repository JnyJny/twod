[project]
name = "twod"
version = "0.3.1"
description = "A two-dimensional geometry library for humans."
repository = 'https://github.com/JnyJny/twod.git'
readme = "README.md"
authors = [
    { name = "JnyJny", email = "erik.oshaughnessy@gmail.com" }
]
classifiers = [
            "Development Status :: 3 - Alpha",
            "Intended Audience :: Developers",
            "License :: OSI Approved :: Apache Software License",
            "Programming Language :: Python :: 3.7",
	    "Topic :: Games/Entertainment",
	    "Topic :: Multimedia :: Graphics",
	    "Topic :: Scientific/Engineering :: Mathematics",
]
requires-python = ">=3.10"
dependencies = []

[tool.poe.tasks]

# testing
_generate_coverage = "pytest --cov=./src/twod --cov-report=html"
_open_report = "open htmlcov/index.html"
coverage.sequence = [ "_generate_coverage", "_open_report"]
coverage.help = "Generate and view a code coverage report."

mypy.cmd = "mypy --config-file pyproject.toml src/twod"
mypy.help = "Run mypy type checker on source."

ty.cmd = "ty check src/twod"
ty.help = "Run ty type checker on source."

check.sequence = [ "mypy", "ty"]
check.help = "Run all type checkers on source."

# requirements

requirements.sequence = [
 { cmd = "uv -q export --output-file requirements.txt" },
 { cmd = "git add requirements.txt" },
 { cmd = "git commit -m 'requirements.txt updated from uv.lock'"},
]
requirements.help = "Creates a requirements.txt and commits it."

# update version in pyproject

_patch_bump = "uv version --bump patch"
_minor_bump = "uv version --bump minor"
_major_bump = "uv version --bump major"

# add, commit, tag and commit pyproject updated by bump

_add = "git add pyproject.toml uv.lock"
_commit = {shell = "git commit -m v`uv version --short`"}
_tag = {shell = "git tag v`uv version --short`" }
_push = "git push --all"
_push_tags = "git push --tags"

_update_pyproject = ["_add", "_commit", "_tag", "_push_tags", "_push"]

publish_patch.sequence = ["_patch_bump", "_update_pyproject"]
publish_patch.help = "Update patch version and push a commit with updated version and tag."
publish_minor.sequence = ["_minor_bump", "_update_pyproject"]
publish_minor.help = "Update minor version and push a commit with updated version and tag."
publish_major.sequence = ["_major_bump", "_update_pyproject"]
publish_major.help = "Update major version and push a commit with updated version and tag."

publish.ref = "publish_patch"
publish.help = "Publish a patch update."


[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[dependency-groups]
dev = [
    "black>=25.1.0",
    "coverage>=7.8.1",
    "isort>=6.0.1",
    "mypy>=1.15.0",
    "poethepoet>=0.34.0",
    "pytest>=8.3.5",
    "pytest-cov>=6.1.1",
    "ruff>=0.11.11",
    "ty>=0.0.1a6",
]
